definitions:
  indexrepo.DataObject:
    properties:
      data:
        items:
          type: integer
        type: array
      indexKey:
        type: string
    type: object
  internal_fetch_httphandler.indexKeyResponse:
    properties:
      indexKey:
        type: string
    type: object
  internal_fetch_httphandler.indexKeysResponse:
    properties:
      indexKeys:
        items:
          type: string
        type: array
    type: object
info:
  contact: {}
  title: DIMO Fetch API
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /v1/vehicle/index-keys/{tokenId}:
    get:
      consumes:
      - application/json
      description: Retrieves a list of index keys that match the provided search options
      parameters:
      - in: query
        name: after
        type: string
      - in: query
        name: before
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: producer
        type: string
      - in: query
        name: source
        type: string
      - in: query
        name: type
        type: string
      - description: Token ID
        in: path
        name: tokenId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns list of index keys
          schema:
            $ref: '#/definitions/internal_fetch_httphandler.indexKeysResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get multiple index keys based on search criteria
      tags:
      - objects
  /v1/vehicle/latest-index-key/{tokenId}:
    get:
      consumes:
      - application/json
      description: Retrieves the most recent index key that matches the provided search
        options
      parameters:
      - in: query
        name: after
        type: string
      - in: query
        name: before
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: producer
        type: string
      - in: query
        name: source
        type: string
      - in: query
        name: type
        type: string
      - description: Token ID
        in: path
        name: tokenId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns the latest index key
          schema:
            $ref: '#/definitions/internal_fetch_httphandler.indexKeyResponse'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get the latest index key based on search criteria
      tags:
      - objects
  /v1/vehicle/latest-object/{tokenId}:
    get:
      consumes:
      - application/json
      description: Retrieves the content of the most recent object that matches the
        provided search options
      parameters:
      - in: query
        name: after
        type: string
      - in: query
        name: before
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: producer
        type: string
      - in: query
        name: source
        type: string
      - in: query
        name: type
        type: string
      - description: Token ID
        in: path
        name: tokenId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns latest object data
          schema:
            $ref: '#/definitions/indexrepo.DataObject'
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get the latest object based on search criteria
      tags:
      - objects
  /v1/vehicle/objects/{tokenId}:
    get:
      consumes:
      - application/json
      description: Retrieves the content of multiple objects that match the provided
        search options
      parameters:
      - in: query
        name: after
        type: string
      - in: query
        name: before
        type: string
      - in: query
        name: limit
        type: integer
      - in: query
        name: producer
        type: string
      - in: query
        name: source
        type: string
      - in: query
        name: type
        type: string
      - description: Token ID
        in: path
        name: tokenId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Returns latest object data
          schema:
            items:
              $ref: '#/definitions/indexrepo.DataObject'
            type: array
        "400":
          description: Invalid request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get multiple objects based on search criteria
      tags:
      - objects
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
