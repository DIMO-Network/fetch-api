// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v4.25.2
// source: pkg/grpc/fetch-api.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Define the SearchOptions message, which provides filtering options
// to narrow down the search results for cloud events based on various criteria.
type SearchOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	After           *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=after,proto3" json:"after,omitempty"`                                            // Only include events after this timestamp.
	Before          *timestamppb.Timestamp  `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`                                          // Only include events before this timestamp.
	TimestampAsc    *wrapperspb.BoolValue   `protobuf:"bytes,3,opt,name=timestamp_asc,json=timestampAsc,proto3" json:"timestamp_asc,omitempty"`          // Whether to sort results in ascending order by timestamp.
	PrimaryFiller   *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=primary_filler,json=primaryFiller,proto3" json:"primary_filler,omitempty"`       // Primary filler value used to filter events.
	DataType        *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`                      // Data type to filter events (e.g., temperature, humidity).
	Subject         *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`                                        // The subject NFT to filter events related to a specific token.
	SecondaryFiller *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=secondary_filler,json=secondaryFiller,proto3" json:"secondary_filler,omitempty"` // Secondary filler value used to filter events.
	Source          *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`                                          // The source identifier responsible for creating the data.
	Producer        *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=producer,proto3" json:"producer,omitempty"`                                      // The producer of the data, represented as an NFTDID.
	Optional        *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=optional,proto3" json:"optional,omitempty"`                                     // Additional optional metadata for more precise filtering.
}

func (x *SearchOptions) Reset() {
	*x = SearchOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOptions) ProtoMessage() {}

func (x *SearchOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOptions.ProtoReflect.Descriptor instead.
func (*SearchOptions) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{0}
}

func (x *SearchOptions) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *SearchOptions) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *SearchOptions) GetTimestampAsc() *wrapperspb.BoolValue {
	if x != nil {
		return x.TimestampAsc
	}
	return nil
}

func (x *SearchOptions) GetPrimaryFiller() *wrapperspb.StringValue {
	if x != nil {
		return x.PrimaryFiller
	}
	return nil
}

func (x *SearchOptions) GetDataType() *wrapperspb.StringValue {
	if x != nil {
		return x.DataType
	}
	return nil
}

func (x *SearchOptions) GetSubject() *wrapperspb.StringValue {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *SearchOptions) GetSecondaryFiller() *wrapperspb.StringValue {
	if x != nil {
		return x.SecondaryFiller
	}
	return nil
}

func (x *SearchOptions) GetSource() *wrapperspb.StringValue {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *SearchOptions) GetProducer() *wrapperspb.StringValue {
	if x != nil {
		return x.Producer
	}
	return nil
}

func (x *SearchOptions) GetOptional() *wrapperspb.StringValue {
	if x != nil {
		return x.Optional
	}
	return nil
}

// Define the Index message, which contains the index information for cloud events
// that can be used to store or retrieve data related to specific NFTs.
type Index struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp       *timestamppb.Timestamp  `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                    // The timestamp indicating when the cloud event was created.
	PrimaryFiller   string                  `protobuf:"bytes,2,opt,name=primary_filler,json=primaryFiller,proto3" json:"primary_filler,omitempty"`       // Primary filler value used to categorize the event.
	DataType        string                  `protobuf:"bytes,3,opt,name=data_type,json=dataType,proto3" json:"data_type,omitempty"`                      // The type of data this event represents.
	Subject         *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=subject,proto3" json:"subject,omitempty"`                                        // The subject NFT associated with this event.
	SecondaryFiller string                  `protobuf:"bytes,5,opt,name=secondary_filler,json=secondaryFiller,proto3" json:"secondary_filler,omitempty"` // Secondary filler value used to further categorize the event.
	Source          string                  `protobuf:"bytes,6,opt,name=source,proto3" json:"source,omitempty"`                                          // The identifier of the source that created this data.
	Producer        *wrapperspb.StringValue `protobuf:"bytes,7,opt,name=producer,proto3" json:"producer,omitempty"`                                      // The producer of the data, represented as an NFTDID.
	Optional        string                  `protobuf:"bytes,8,opt,name=optional,proto3" json:"optional,omitempty"`                                      // Optional metadata associated with the event.
}

func (x *Index) Reset() {
	*x = Index{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Index) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Index) ProtoMessage() {}

func (x *Index) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Index.ProtoReflect.Descriptor instead.
func (*Index) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{1}
}

func (x *Index) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Index) GetPrimaryFiller() string {
	if x != nil {
		return x.PrimaryFiller
	}
	return ""
}

func (x *Index) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *Index) GetSubject() *wrapperspb.StringValue {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *Index) GetSecondaryFiller() string {
	if x != nil {
		return x.SecondaryFiller
	}
	return ""
}

func (x *Index) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *Index) GetProducer() *wrapperspb.StringValue {
	if x != nil {
		return x.Producer
	}
	return nil
}

func (x *Index) GetOptional() string {
	if x != nil {
		return x.Optional
	}
	return ""
}

type GetLatestFileNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *SearchOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"` // Search options to filter the events.
}

func (x *GetLatestFileNameRequest) Reset() {
	*x = GetLatestFileNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestFileNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestFileNameRequest) ProtoMessage() {}

func (x *GetLatestFileNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestFileNameRequest.ProtoReflect.Descriptor instead.
func (*GetLatestFileNameRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{2}
}

func (x *GetLatestFileNameRequest) GetOptions() *SearchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetLatestFileNameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filename string `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"` // The latest filename retrieved for the specified search criteria.
}

func (x *GetLatestFileNameResponse) Reset() {
	*x = GetLatestFileNameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestFileNameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestFileNameResponse) ProtoMessage() {}

func (x *GetLatestFileNameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestFileNameResponse.ProtoReflect.Descriptor instead.
func (*GetLatestFileNameResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetLatestFileNameResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type GetFileNamesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *SearchOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"` // Search options to filter the events.
	Limit   int32          `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`    // The maximum number of filenames to return.
}

func (x *GetFileNamesRequest) Reset() {
	*x = GetFileNamesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileNamesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileNamesRequest) ProtoMessage() {}

func (x *GetFileNamesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileNamesRequest.ProtoReflect.Descriptor instead.
func (*GetFileNamesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetFileNamesRequest) GetOptions() *SearchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GetFileNamesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetFileNamesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Filenames []string `protobuf:"bytes,1,rep,name=filenames,proto3" json:"filenames,omitempty"` // The latest filename retrieved for the specified search criteria.
}

func (x *GetFileNamesResponse) Reset() {
	*x = GetFileNamesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFileNamesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFileNamesResponse) ProtoMessage() {}

func (x *GetFileNamesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFileNamesResponse.ProtoReflect.Descriptor instead.
func (*GetFileNamesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{5}
}

func (x *GetFileNamesResponse) GetFilenames() []string {
	if x != nil {
		return x.Filenames
	}
	return nil
}

// Request and response messages for fetching the latest cloud event data.
type GetLatestFileRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *SearchOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"` // Search options to filter the events.
}

func (x *GetLatestFileRequest) Reset() {
	*x = GetLatestFileRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestFileRequest) ProtoMessage() {}

func (x *GetLatestFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestFileRequest.ProtoReflect.Descriptor instead.
func (*GetLatestFileRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{6}
}

func (x *GetLatestFileRequest) GetOptions() *SearchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

type GetLatestFileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"` // The data retrieved from the latest cloud event.
}

func (x *GetLatestFileResponse) Reset() {
	*x = GetLatestFileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestFileResponse) ProtoMessage() {}

func (x *GetLatestFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestFileResponse.ProtoReflect.Descriptor instead.
func (*GetLatestFileResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetLatestFileResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetFilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *SearchOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"` // Search options to filter the events.
	Limit   int32          `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`    // The maximum number of cloud events to return.
}

func (x *GetFilesRequest) Reset() {
	*x = GetFilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesRequest) ProtoMessage() {}

func (x *GetFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesRequest.ProtoReflect.Descriptor instead.
func (*GetFilesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetFilesRequest) GetOptions() *SearchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *GetFilesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

type GetFilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data [][]byte `protobuf:"bytes,1,rep,name=data,proto3" json:"data,omitempty"` // The list of data retrieved from the cloud events.
}

func (x *GetFilesResponse) Reset() {
	*x = GetFilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFilesResponse) ProtoMessage() {}

func (x *GetFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFilesResponse.ProtoReflect.Descriptor instead.
func (*GetFilesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{9}
}

func (x *GetFilesResponse) GetData() [][]byte {
	if x != nil {
		return x.Data
	}
	return nil
}

var File_pkg_grpc_fetch_api_proto protoreflect.FileDescriptor

var file_pkg_grpc_fetch_api_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x2d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0xe1, 0x04, 0x0a, 0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x30, 0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05,
	0x61, 0x66, 0x74, 0x65, 0x72, 0x12, 0x32, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x5f, 0x61, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x41, 0x73, 0x63, 0x12, 0x43, 0x0a, 0x0e, 0x70, 0x72,
	0x69, 0x6d, 0x61, 0x72, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x12,
	0x39, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x47, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x5f,
	0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0f, 0x73, 0x65, 0x63, 0x6f,
	0x6e, 0x64, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x12, 0x34, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72, 0x12, 0x38, 0x0a, 0x08, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0xd6, 0x02, 0x0a, 0x05, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x1b, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x36, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61,
	0x72, 0x79, 0x5f, 0x66, 0x69, 0x6c, 0x6c, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x22, 0x49,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x37, 0x0a, 0x19, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x70,
	0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52,
	0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x34,
	0x0a, 0x14, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x22, 0x45, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x2b, 0x0a, 0x15, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x56, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x26, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x32, 0xb4, 0x02, 0x0a, 0x10, 0x49, 0x6e, 0x64,
	0x65, 0x78, 0x52, 0x65, 0x70, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x54, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x12, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x1a, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x12, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42,
	0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x49,
	0x4d, 0x4f, 0x2d, 0x4e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2d, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_grpc_fetch_api_proto_rawDescOnce sync.Once
	file_pkg_grpc_fetch_api_proto_rawDescData = file_pkg_grpc_fetch_api_proto_rawDesc
)

func file_pkg_grpc_fetch_api_proto_rawDescGZIP() []byte {
	file_pkg_grpc_fetch_api_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_fetch_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_grpc_fetch_api_proto_rawDescData)
	})
	return file_pkg_grpc_fetch_api_proto_rawDescData
}

var file_pkg_grpc_fetch_api_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_pkg_grpc_fetch_api_proto_goTypes = []interface{}{
	(*SearchOptions)(nil),             // 0: grpc.SearchOptions
	(*Index)(nil),                     // 1: grpc.Index
	(*GetLatestFileNameRequest)(nil),  // 2: grpc.GetLatestFileNameRequest
	(*GetLatestFileNameResponse)(nil), // 3: grpc.GetLatestFileNameResponse
	(*GetFileNamesRequest)(nil),       // 4: grpc.GetFileNamesRequest
	(*GetFileNamesResponse)(nil),      // 5: grpc.GetFileNamesResponse
	(*GetLatestFileRequest)(nil),      // 6: grpc.GetLatestFileRequest
	(*GetLatestFileResponse)(nil),     // 7: grpc.GetLatestFileResponse
	(*GetFilesRequest)(nil),           // 8: grpc.GetFilesRequest
	(*GetFilesResponse)(nil),          // 9: grpc.GetFilesResponse
	(*timestamppb.Timestamp)(nil),     // 10: google.protobuf.Timestamp
	(*wrapperspb.BoolValue)(nil),      // 11: google.protobuf.BoolValue
	(*wrapperspb.StringValue)(nil),    // 12: google.protobuf.StringValue
}
var file_pkg_grpc_fetch_api_proto_depIdxs = []int32{
	10, // 0: grpc.SearchOptions.after:type_name -> google.protobuf.Timestamp
	10, // 1: grpc.SearchOptions.before:type_name -> google.protobuf.Timestamp
	11, // 2: grpc.SearchOptions.timestamp_asc:type_name -> google.protobuf.BoolValue
	12, // 3: grpc.SearchOptions.primary_filler:type_name -> google.protobuf.StringValue
	12, // 4: grpc.SearchOptions.data_type:type_name -> google.protobuf.StringValue
	12, // 5: grpc.SearchOptions.subject:type_name -> google.protobuf.StringValue
	12, // 6: grpc.SearchOptions.secondary_filler:type_name -> google.protobuf.StringValue
	12, // 7: grpc.SearchOptions.source:type_name -> google.protobuf.StringValue
	12, // 8: grpc.SearchOptions.producer:type_name -> google.protobuf.StringValue
	12, // 9: grpc.SearchOptions.optional:type_name -> google.protobuf.StringValue
	10, // 10: grpc.Index.timestamp:type_name -> google.protobuf.Timestamp
	12, // 11: grpc.Index.subject:type_name -> google.protobuf.StringValue
	12, // 12: grpc.Index.producer:type_name -> google.protobuf.StringValue
	0,  // 13: grpc.GetLatestFileNameRequest.options:type_name -> grpc.SearchOptions
	0,  // 14: grpc.GetFileNamesRequest.options:type_name -> grpc.SearchOptions
	0,  // 15: grpc.GetLatestFileRequest.options:type_name -> grpc.SearchOptions
	0,  // 16: grpc.GetFilesRequest.options:type_name -> grpc.SearchOptions
	2,  // 17: grpc.IndexRepoService.GetLatestFileName:input_type -> grpc.GetLatestFileNameRequest
	4,  // 18: grpc.IndexRepoService.GetFileNames:input_type -> grpc.GetFileNamesRequest
	6,  // 19: grpc.IndexRepoService.GetLatestFile:input_type -> grpc.GetLatestFileRequest
	8,  // 20: grpc.IndexRepoService.GetFiles:input_type -> grpc.GetFilesRequest
	3,  // 21: grpc.IndexRepoService.GetLatestFileName:output_type -> grpc.GetLatestFileNameResponse
	5,  // 22: grpc.IndexRepoService.GetFileNames:output_type -> grpc.GetFileNamesResponse
	7,  // 23: grpc.IndexRepoService.GetLatestFile:output_type -> grpc.GetLatestFileResponse
	9,  // 24: grpc.IndexRepoService.GetFiles:output_type -> grpc.GetFilesResponse
	21, // [21:25] is the sub-list for method output_type
	17, // [17:21] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_pkg_grpc_fetch_api_proto_init() }
func file_pkg_grpc_fetch_api_proto_init() {
	if File_pkg_grpc_fetch_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_grpc_fetch_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SearchOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Index); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestFileNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestFileNameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileNamesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFileNamesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestFileRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetLatestFileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_grpc_fetch_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_fetch_api_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_fetch_api_proto_depIdxs,
		MessageInfos:      file_pkg_grpc_fetch_api_proto_msgTypes,
	}.Build()
	File_pkg_grpc_fetch_api_proto = out.File
	file_pkg_grpc_fetch_api_proto_rawDesc = nil
	file_pkg_grpc_fetch_api_proto_goTypes = nil
	file_pkg_grpc_fetch_api_proto_depIdxs = nil
}
