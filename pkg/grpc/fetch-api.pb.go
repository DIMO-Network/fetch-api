// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.28.3
// source: pkg/grpc/fetch-api.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	wrapperspb "google.golang.org/protobuf/types/known/wrapperspb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SearchOptions provides filtering options to narrow down the search results for objects
// based on various criteria. If a field is not set, it is not used for filtering.
type SearchOptions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only include events after this timestamp.
	After *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=after,proto3" json:"after,omitempty"`
	// Only include events before this timestamp.
	Before *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=before,proto3" json:"before,omitempty"`
	// Whether to sort results in ascending order by timestamp.
	TimestampAsc *wrapperspb.BoolValue `protobuf:"bytes,3,opt,name=timestamp_asc,json=timestampAsc,proto3" json:"timestamp_asc,omitempty"`
	// Type of the event to filter.
	Type *wrapperspb.StringValue `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`
	// DataVersion of the event to filter.
	DataVersion *wrapperspb.StringValue `protobuf:"bytes,5,opt,name=data_version,json=dataVersion,proto3" json:"data_version,omitempty"`
	// The subject of the event to filter.
	Subject *wrapperspb.StringValue `protobuf:"bytes,6,opt,name=subject,proto3" json:"subject,omitempty"`
	// The source identifier responsible for creating the data.
	Source *wrapperspb.StringValue `protobuf:"bytes,8,opt,name=source,proto3" json:"source,omitempty"`
	// The producer of the data, source entity responsible for creating the data.
	Producer *wrapperspb.StringValue `protobuf:"bytes,9,opt,name=producer,proto3" json:"producer,omitempty"`
	// exta values from the cloud event header this is a JSON string.
	Extras *wrapperspb.StringValue `protobuf:"bytes,10,opt,name=extras,proto3" json:"extras,omitempty"`
}

func (x *SearchOptions) Reset() {
	*x = SearchOptions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SearchOptions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchOptions) ProtoMessage() {}

func (x *SearchOptions) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchOptions.ProtoReflect.Descriptor instead.
func (*SearchOptions) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{0}
}

func (x *SearchOptions) GetAfter() *timestamppb.Timestamp {
	if x != nil {
		return x.After
	}
	return nil
}

func (x *SearchOptions) GetBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.Before
	}
	return nil
}

func (x *SearchOptions) GetTimestampAsc() *wrapperspb.BoolValue {
	if x != nil {
		return x.TimestampAsc
	}
	return nil
}

func (x *SearchOptions) GetType() *wrapperspb.StringValue {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *SearchOptions) GetDataVersion() *wrapperspb.StringValue {
	if x != nil {
		return x.DataVersion
	}
	return nil
}

func (x *SearchOptions) GetSubject() *wrapperspb.StringValue {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *SearchOptions) GetSource() *wrapperspb.StringValue {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *SearchOptions) GetProducer() *wrapperspb.StringValue {
	if x != nil {
		return x.Producer
	}
	return nil
}

func (x *SearchOptions) GetExtras() *wrapperspb.StringValue {
	if x != nil {
		return x.Extras
	}
	return nil
}

type CloudEventIndex struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The cloud event header of the cloud event.
	Header *CloudEventHeader `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	// The index key of the cloud event.
	Data *ObjectInfo `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CloudEventIndex) Reset() {
	*x = CloudEventIndex{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudEventIndex) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudEventIndex) ProtoMessage() {}

func (x *CloudEventIndex) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudEventIndex.ProtoReflect.Descriptor instead.
func (*CloudEventIndex) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{1}
}

func (x *CloudEventIndex) GetHeader() *CloudEventHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CloudEventIndex) GetData() *ObjectInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ObjectInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The index key of the cloud event.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *ObjectInfo) Reset() {
	*x = ObjectInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ObjectInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ObjectInfo) ProtoMessage() {}

func (x *ObjectInfo) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ObjectInfo.ProtoReflect.Descriptor instead.
func (*ObjectInfo) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{2}
}

func (x *ObjectInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

// GetLatestIndexRequest includes search options to filter the events.
type GetLatestIndexRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Options *SearchOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *GetLatestIndexRequest) Reset() {
	*x = GetLatestIndexRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestIndexRequest) ProtoMessage() {}

func (x *GetLatestIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestIndexRequest.ProtoReflect.Descriptor instead.
func (*GetLatestIndexRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetLatestIndexRequest) GetOptions() *SearchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// GetLatestIndexResponse provides the latest index retrieved for the specified search criteria.
type GetLatestIndexResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The latest index key retrieved for the specified search criteria.
	Index *CloudEventIndex `protobuf:"bytes,1,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *GetLatestIndexResponse) Reset() {
	*x = GetLatestIndexResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestIndexResponse) ProtoMessage() {}

func (x *GetLatestIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestIndexResponse.ProtoReflect.Descriptor instead.
func (*GetLatestIndexResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetLatestIndexResponse) GetIndex() *CloudEventIndex {
	if x != nil {
		return x.Index
	}
	return nil
}

// ListIndexesRequest includes search options to filter the events.
type ListIndexesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search options to filter the events.
	Options *SearchOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	// The maximum number of index objects to return.
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListIndexesRequest) Reset() {
	*x = ListIndexesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIndexesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIndexesRequest) ProtoMessage() {}

func (x *ListIndexesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIndexesRequest.ProtoReflect.Descriptor instead.
func (*ListIndexesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{5}
}

func (x *ListIndexesRequest) GetOptions() *SearchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ListIndexesRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// ListIndexesResponse returns the list of index for cloud events retrieved for the specified search criteria.
type ListIndexesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of index objects retrieved for the specified search criteria.
	Indexes []*CloudEventIndex `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *ListIndexesResponse) Reset() {
	*x = ListIndexesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListIndexesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIndexesResponse) ProtoMessage() {}

func (x *ListIndexesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIndexesResponse.ProtoReflect.Descriptor instead.
func (*ListIndexesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{6}
}

func (x *ListIndexesResponse) GetIndexes() []*CloudEventIndex {
	if x != nil {
		return x.Indexes
	}
	return nil
}

// GetLatestCloudEventRequest includes search options to filter the events.
type GetLatestCloudEventRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search options to filter the events.
	Options *SearchOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
}

func (x *GetLatestCloudEventRequest) Reset() {
	*x = GetLatestCloudEventRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestCloudEventRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestCloudEventRequest) ProtoMessage() {}

func (x *GetLatestCloudEventRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestCloudEventRequest.ProtoReflect.Descriptor instead.
func (*GetLatestCloudEventRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{7}
}

func (x *GetLatestCloudEventRequest) GetOptions() *SearchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

// GetLatestCloudEventResponse provides the data retrieved from the latest cloud event.
type GetLatestCloudEventResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The data retrieved from the latest cloud event.
	CloudEvent *CloudEvent `protobuf:"bytes,1,opt,name=cloud_event,json=cloudEvent,proto3" json:"cloud_event,omitempty"`
}

func (x *GetLatestCloudEventResponse) Reset() {
	*x = GetLatestCloudEventResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetLatestCloudEventResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetLatestCloudEventResponse) ProtoMessage() {}

func (x *GetLatestCloudEventResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetLatestCloudEventResponse.ProtoReflect.Descriptor instead.
func (*GetLatestCloudEventResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{8}
}

func (x *GetLatestCloudEventResponse) GetCloudEvent() *CloudEvent {
	if x != nil {
		return x.CloudEvent
	}
	return nil
}

// ListCloudEventsRequest includes search options to filter the events.
type ListCloudEventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Search options to filter the events.
	Options *SearchOptions `protobuf:"bytes,1,opt,name=options,proto3" json:"options,omitempty"`
	// The maximum number of objects to return.
	Limit int32 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *ListCloudEventsRequest) Reset() {
	*x = ListCloudEventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudEventsRequest) ProtoMessage() {}

func (x *ListCloudEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudEventsRequest.ProtoReflect.Descriptor instead.
func (*ListCloudEventsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{9}
}

func (x *ListCloudEventsRequest) GetOptions() *SearchOptions {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *ListCloudEventsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// ListCloudEventsResponse provides the list of data retrieved from the objects.
type ListCloudEventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of data retrieved from the objects.
	CloudEvents []*CloudEvent `protobuf:"bytes,1,rep,name=cloud_events,json=cloudEvents,proto3" json:"cloud_events,omitempty"`
}

func (x *ListCloudEventsResponse) Reset() {
	*x = ListCloudEventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudEventsResponse) ProtoMessage() {}

func (x *ListCloudEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudEventsResponse.ProtoReflect.Descriptor instead.
func (*ListCloudEventsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{10}
}

func (x *ListCloudEventsResponse) GetCloudEvents() []*CloudEvent {
	if x != nil {
		return x.CloudEvents
	}
	return nil
}

// ListCloudEventsFromKeysRequest includes the index key to filter the events.
type ListCloudEventsFromKeysRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of index objects whose underlying cloud events are to be retrieved.
	Indexes []*CloudEventIndex `protobuf:"bytes,1,rep,name=indexes,proto3" json:"indexes,omitempty"`
}

func (x *ListCloudEventsFromKeysRequest) Reset() {
	*x = ListCloudEventsFromKeysRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudEventsFromKeysRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudEventsFromKeysRequest) ProtoMessage() {}

func (x *ListCloudEventsFromKeysRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudEventsFromKeysRequest.ProtoReflect.Descriptor instead.
func (*ListCloudEventsFromKeysRequest) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{11}
}

func (x *ListCloudEventsFromKeysRequest) GetIndexes() []*CloudEventIndex {
	if x != nil {
		return x.Indexes
	}
	return nil
}

// ListCloudEventsFromNameResponse provides the list of data retrieved from the objects.
type ListCloudEventsFromKeysResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of data retrieved from the objects.
	CloudEvents []*CloudEvent `protobuf:"bytes,1,rep,name=cloud_events,json=cloudEvents,proto3" json:"cloud_events,omitempty"`
}

func (x *ListCloudEventsFromKeysResponse) Reset() {
	*x = ListCloudEventsFromKeysResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_grpc_fetch_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListCloudEventsFromKeysResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCloudEventsFromKeysResponse) ProtoMessage() {}

func (x *ListCloudEventsFromKeysResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_fetch_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCloudEventsFromKeysResponse.ProtoReflect.Descriptor instead.
func (*ListCloudEventsFromKeysResponse) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_fetch_api_proto_rawDescGZIP(), []int{12}
}

func (x *ListCloudEventsFromKeysResponse) GetCloudEvents() []*CloudEvent {
	if x != nil {
		return x.CloudEvents
	}
	return nil
}

var File_pkg_grpc_fetch_api_proto protoreflect.FileDescriptor

var file_pkg_grpc_fetch_api_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68,
	0x2d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x67, 0x72, 0x70, 0x63,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x77, 0x72, 0x61, 0x70, 0x70, 0x65, 0x72, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x19, 0x70, 0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x04, 0x0a,
	0x0d, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x30,
	0x0a, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x12, 0x32, 0x0a, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x06, 0x62, 0x65,
	0x66, 0x6f, 0x72, 0x65, 0x12, 0x3f, 0x0a, 0x0d, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x5f, 0x61, 0x73, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0c, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x41, 0x73, 0x63, 0x12, 0x30, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3f, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x5f,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x61, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69,
	0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x34, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e,
	0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x72,
	0x12, 0x34, 0x0a, 0x06, 0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x65, 0x78, 0x74, 0x72, 0x61, 0x73, 0x22, 0x6d, 0x0a, 0x0f, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x34, 0x0a, 0x06, 0x68, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x63, 0x6c, 0x6f, 0x75,
	0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12,
	0x24, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x1e, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x46, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65,
	0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d,
	0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x45, 0x0a,
	0x16, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2b, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x05, 0x69,
	0x6e, 0x64, 0x65, 0x78, 0x22, 0x59, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65,
	0x78, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22,
	0x46, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x07,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x22, 0x4b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x4c, 0x61,
	0x74, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x56, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x0a, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x5d, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x07, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x22, 0x54, 0x0a, 0x17, 0x4c,
	0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x63,
	0x6c, 0x6f, 0x75, 0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0x51, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x07, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x07, 0x69, 0x6e, 0x64,
	0x65, 0x78, 0x65, 0x73, 0x22, 0x5c, 0x0a, 0x1f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x75, 0x64,
	0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x63, 0x6c, 0x6f, 0x75, 0x64, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x73, 0x32, 0xb4, 0x03, 0x0a, 0x0c, 0x46, 0x65, 0x74, 0x63, 0x68, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x4b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74,
	0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74,
	0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74,
	0x65, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x42, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x12,
	0x18, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x67, 0x72, 0x70, 0x63,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73,
	0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x2e, 0x67, 0x72,
	0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x4c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4e, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x1c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43,
	0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f,
	0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x67, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x24, 0x2e, 0x67,
	0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6c,
	0x6f, 0x75, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4b, 0x65, 0x79,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x49, 0x4d, 0x4f, 0x2d, 0x4e, 0x65, 0x74,
	0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x66, 0x65, 0x74, 0x63, 0x68, 0x2d, 0x61, 0x70, 0x69, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_grpc_fetch_api_proto_rawDescOnce sync.Once
	file_pkg_grpc_fetch_api_proto_rawDescData = file_pkg_grpc_fetch_api_proto_rawDesc
)

func file_pkg_grpc_fetch_api_proto_rawDescGZIP() []byte {
	file_pkg_grpc_fetch_api_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_fetch_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_grpc_fetch_api_proto_rawDescData)
	})
	return file_pkg_grpc_fetch_api_proto_rawDescData
}

var file_pkg_grpc_fetch_api_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_pkg_grpc_fetch_api_proto_goTypes = []any{
	(*SearchOptions)(nil),                   // 0: grpc.SearchOptions
	(*CloudEventIndex)(nil),                 // 1: grpc.CloudEventIndex
	(*ObjectInfo)(nil),                      // 2: grpc.ObjectInfo
	(*GetLatestIndexRequest)(nil),           // 3: grpc.GetLatestIndexRequest
	(*GetLatestIndexResponse)(nil),          // 4: grpc.GetLatestIndexResponse
	(*ListIndexesRequest)(nil),              // 5: grpc.ListIndexesRequest
	(*ListIndexesResponse)(nil),             // 6: grpc.ListIndexesResponse
	(*GetLatestCloudEventRequest)(nil),      // 7: grpc.GetLatestCloudEventRequest
	(*GetLatestCloudEventResponse)(nil),     // 8: grpc.GetLatestCloudEventResponse
	(*ListCloudEventsRequest)(nil),          // 9: grpc.ListCloudEventsRequest
	(*ListCloudEventsResponse)(nil),         // 10: grpc.ListCloudEventsResponse
	(*ListCloudEventsFromKeysRequest)(nil),  // 11: grpc.ListCloudEventsFromKeysRequest
	(*ListCloudEventsFromKeysResponse)(nil), // 12: grpc.ListCloudEventsFromKeysResponse
	(*timestamppb.Timestamp)(nil),           // 13: google.protobuf.Timestamp
	(*wrapperspb.BoolValue)(nil),            // 14: google.protobuf.BoolValue
	(*wrapperspb.StringValue)(nil),          // 15: google.protobuf.StringValue
	(*CloudEventHeader)(nil),                // 16: cloudevent.CloudEventHeader
	(*CloudEvent)(nil),                      // 17: cloudevent.CloudEvent
}
var file_pkg_grpc_fetch_api_proto_depIdxs = []int32{
	13, // 0: grpc.SearchOptions.after:type_name -> google.protobuf.Timestamp
	13, // 1: grpc.SearchOptions.before:type_name -> google.protobuf.Timestamp
	14, // 2: grpc.SearchOptions.timestamp_asc:type_name -> google.protobuf.BoolValue
	15, // 3: grpc.SearchOptions.type:type_name -> google.protobuf.StringValue
	15, // 4: grpc.SearchOptions.data_version:type_name -> google.protobuf.StringValue
	15, // 5: grpc.SearchOptions.subject:type_name -> google.protobuf.StringValue
	15, // 6: grpc.SearchOptions.source:type_name -> google.protobuf.StringValue
	15, // 7: grpc.SearchOptions.producer:type_name -> google.protobuf.StringValue
	15, // 8: grpc.SearchOptions.extras:type_name -> google.protobuf.StringValue
	16, // 9: grpc.CloudEventIndex.header:type_name -> cloudevent.CloudEventHeader
	2,  // 10: grpc.CloudEventIndex.data:type_name -> grpc.ObjectInfo
	0,  // 11: grpc.GetLatestIndexRequest.options:type_name -> grpc.SearchOptions
	1,  // 12: grpc.GetLatestIndexResponse.index:type_name -> grpc.CloudEventIndex
	0,  // 13: grpc.ListIndexesRequest.options:type_name -> grpc.SearchOptions
	1,  // 14: grpc.ListIndexesResponse.indexes:type_name -> grpc.CloudEventIndex
	0,  // 15: grpc.GetLatestCloudEventRequest.options:type_name -> grpc.SearchOptions
	17, // 16: grpc.GetLatestCloudEventResponse.cloud_event:type_name -> cloudevent.CloudEvent
	0,  // 17: grpc.ListCloudEventsRequest.options:type_name -> grpc.SearchOptions
	17, // 18: grpc.ListCloudEventsResponse.cloud_events:type_name -> cloudevent.CloudEvent
	1,  // 19: grpc.ListCloudEventsFromKeysRequest.indexes:type_name -> grpc.CloudEventIndex
	17, // 20: grpc.ListCloudEventsFromKeysResponse.cloud_events:type_name -> cloudevent.CloudEvent
	3,  // 21: grpc.FetchService.GetLatestIndex:input_type -> grpc.GetLatestIndexRequest
	5,  // 22: grpc.FetchService.ListIndexes:input_type -> grpc.ListIndexesRequest
	7,  // 23: grpc.FetchService.GetLatestCloudEvent:input_type -> grpc.GetLatestCloudEventRequest
	9,  // 24: grpc.FetchService.ListCloudEvents:input_type -> grpc.ListCloudEventsRequest
	11, // 25: grpc.FetchService.ListCloudEventsFromIndex:input_type -> grpc.ListCloudEventsFromKeysRequest
	4,  // 26: grpc.FetchService.GetLatestIndex:output_type -> grpc.GetLatestIndexResponse
	6,  // 27: grpc.FetchService.ListIndexes:output_type -> grpc.ListIndexesResponse
	8,  // 28: grpc.FetchService.GetLatestCloudEvent:output_type -> grpc.GetLatestCloudEventResponse
	10, // 29: grpc.FetchService.ListCloudEvents:output_type -> grpc.ListCloudEventsResponse
	12, // 30: grpc.FetchService.ListCloudEventsFromIndex:output_type -> grpc.ListCloudEventsFromKeysResponse
	26, // [26:31] is the sub-list for method output_type
	21, // [21:26] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_pkg_grpc_fetch_api_proto_init() }
func file_pkg_grpc_fetch_api_proto_init() {
	if File_pkg_grpc_fetch_api_proto != nil {
		return
	}
	file_pkg_grpc_cloudevent_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pkg_grpc_fetch_api_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*SearchOptions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*CloudEventIndex); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*ObjectInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*GetLatestIndexRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*GetLatestIndexResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*ListIndexesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*ListIndexesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*GetLatestCloudEventRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetLatestCloudEventResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*ListCloudEventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*ListCloudEventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*ListCloudEventsFromKeysRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_grpc_fetch_api_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*ListCloudEventsFromKeysResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_grpc_fetch_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_grpc_fetch_api_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_fetch_api_proto_depIdxs,
		MessageInfos:      file_pkg_grpc_fetch_api_proto_msgTypes,
	}.Build()
	File_pkg_grpc_fetch_api_proto = out.File
	file_pkg_grpc_fetch_api_proto_rawDesc = nil
	file_pkg_grpc_fetch_api_proto_goTypes = nil
	file_pkg_grpc_fetch_api_proto_depIdxs = nil
}
