syntax = "proto3";

package cloudevent;

option go_package = "github.com/DIMO-Network/fetch-api/pkg/grpc";

import "google/protobuf/timestamp.proto";

// CloudEvent represents a CloudEvent with a header and data.
message CloudEvent {
    CloudEventHeader header = 1;
    bytes data = 2;
}

// CloudEventHeader represents the header structure of a CloudEvent.
message CloudEventHeader {
  // ID is an identifier for the event. The combination of ID and Source must
  // be unique.
  string id = 1;

  // Source is the context in which the event happened. In a distributed system it might consist of multiple Producers.
  // Typically the 0x address.
  string source = 2;

  // Producer is a specific instance, process or device that creates the data structure describing the CloudEvent.
  // Typically a DID of a nft.
  string producer = 3;

  // SpecVersion is the version of CloudEvents specification used.
  // This is always hardcoded "1.0".
  string spec_version = 4;

  // Subject is an optional field identifying the subject of the event within
  // the context of the event producer.
  // Typically the DID of the nft.
  string subject = 5;

  // Time which the event occurred.
  google.protobuf.Timestamp time = 6;

  // Type describes the type of event. 
  // Typically a one of the predefined DIMO types. (dimo.status, dimo.fingerprint, dimo.verfiabaleCredential...)
  string type = 7;

  // DataContentType is an optional MIME type for the data field. We almost
  // always serialize to JSON and in that case this field is implicitly
  // "application/json".
  string data_content_type = 8;

  // DataSchema is an optional URI pointing to a schema for the data field.
  string data_schema = 9;

  // DataVersion is the controlled by the source of the event and is used to provide information about the data.
  string data_version = 10;

  // Extras contains any additional fields that are not part of the CloudEvent excluding the data field.
  map<string, bytes> extras = 11;

  // Tags are a list of tags that can be used to filter the events.
  repeated string tags = 12;

  // Signature hold the signature of the a cloudevent's data field.
  string signature = 13;
}

