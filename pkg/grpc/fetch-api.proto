syntax = "proto3";

option go_package = "github.com/DIMO-Network/fetch-api/pkg/grpc";

package grpc;

import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "pkg/grpc/cloudevent.proto";

// FetchService defines the gRPC service for fetching DIMO objects
service FetchService {
  // GetLatestIndexreturns the latest index key for the given options
  rpc GetLatestIndex(GetLatestIndexRequest) returns (GetLatestIndexResponse);

  // ListIndexes fetches and returns the list of cloud event index objects that match the specified options
  rpc ListIndexes(ListIndexesRequest) returns (ListIndexesResponse);

  // GetLatestCloudEvent fetches and returns the latest object that matches the specified options
  rpc GetLatestCloudEvent(GetLatestCloudEventRequest) returns (GetLatestCloudEventResponse);

  // ListCloudEvents fetches and returns the list of objects that match the specified options
  rpc ListCloudEvents(ListCloudEventsRequest) returns (ListCloudEventsResponse);

  // ListCloudEventsFromKeys fetches and returns the list of objects that match the specified index key
  rpc ListCloudEventsFromIndex(ListCloudEventsFromKeysRequest) returns (ListCloudEventsFromKeysResponse);
}

// SearchOptions provides filtering options to narrow down the search results for objects
// based on various criteria. If a field is not set, it is not used for filtering.
message SearchOptions {
  // Only include events after this timestamp.
  google.protobuf.Timestamp after = 1;
  
  // Only include events before this timestamp.
  google.protobuf.Timestamp before = 2;
  
  // Whether to sort results in ascending order by timestamp.
  google.protobuf.BoolValue timestamp_asc = 3;
  
  // Type of the event to filter.
  google.protobuf.StringValue type = 4;
  
  // DataVersion of the event to filter.
  google.protobuf.StringValue data_version = 5;
  
  // The subject of the event to filter.
  google.protobuf.StringValue subject = 6;
  
  // The source identifier responsible for creating the data.
  google.protobuf.StringValue source = 8;
  
  // The producer of the data, source entity responsible for creating the data.
  google.protobuf.StringValue producer = 9;
  
  // exta values from the cloud event header this is a JSON string.
  google.protobuf.StringValue extras = 10;

  // ID of the event to filter.
  google.protobuf.StringValue id = 11;
}

// AdvancedSearchOptions provides flexible filtering options with boolean logic
// to narrow down search results. Each field can use complex filtering operations.
message AdvancedSearchOptions {
  // Only include events after this timestamp.
  google.protobuf.Timestamp after = 1;
  
  // Only include events before this timestamp.
  google.protobuf.Timestamp before = 2;
  
  // Whether to sort results in ascending order by timestamp.
  google.protobuf.BoolValue timestamp_asc = 3;
  
  // Advanced filtering for event type
  StringFilterOption type = 4;
  
  // Advanced filtering for data version
  StringFilterOption data_version = 5;
  
  // Advanced filtering for event subject
  StringFilterOption subject = 6;
  
  // Advanced filtering for source identifier
  StringFilterOption source = 8;
  
  // Advanced filtering for producer
  StringFilterOption producer = 9;
  
  // Advanced filtering for extras (JSON string from cloud event header)
  StringFilterOption extras = 10;

  // Advanced filtering for event ID
  StringFilterOption id = 11;

  // Tags are a list of tags that can be used to filter the events.
  ArrayFilterOption tags = 12;
}

// FilterOption defines a flexible filtering option that can operate on a list of values
// every thing is implicitly ANDed together.
message ArrayFilterOption {
  // Match if the field has any of these values.
  repeated string has_any = 1;

  // Match if the field has all of these values.
  repeated string has_all = 2;

  // Additional filter condition to combine with this one using NOT logic.
  ArrayFilterOption not = 3;

  // Additional filter condition to combine with this one using OR logic.
  ArrayFilterOption or = 4;

}

message StringFilterOption {
  // Match if the field has any of these values (OR logic)
  repeated string has_any = 1;

  // Additional filter condition to combine with this one using NOT logic.
  StringFilterOption not = 2;
  
  // Additional filter condition to combine with this one using OR logic.
  StringFilterOption or = 3;
}

message CloudEventIndex {
  // The cloud event header of the cloud event.
  cloudevent.CloudEventHeader header = 1;
  // The index key of the cloud event.
  ObjectInfo data = 2;
}

message ObjectInfo {
  // The index key of the cloud event.
  string key = 1;
}


// GetLatestIndexRequest includes search options to filter the events.
message GetLatestIndexRequest {
  SearchOptions options = 1;
  AdvancedSearchOptions advanced_options = 2;
}


// GetLatestIndexResponse provides the latest index retrieved for the specified search criteria.
message GetLatestIndexResponse {
  // The latest index key retrieved for the specified search criteria.
  CloudEventIndex index = 1;
}

// ListIndexesRequest includes search options to filter the events.
message ListIndexesRequest{
  // Search options to filter the events.
  SearchOptions options = 1;
  
  // The maximum number of index objects to return.
  int32 limit = 2;

  // Advanced search options to filter the events.
  AdvancedSearchOptions advanced_options = 3;
}

// ListIndexesResponse returns the list of index for cloud events retrieved for the specified search criteria.
message ListIndexesResponse{
  // The list of index objects retrieved for the specified search criteria.
  repeated CloudEventIndex indexes = 1;
}

// GetLatestCloudEventRequest includes search options to filter the events.
message GetLatestCloudEventRequest {
  // Search options to filter the events.
  SearchOptions options = 1;
  // Advanced search options to filter the events.
  AdvancedSearchOptions advanced_options = 2;
}

// GetLatestCloudEventResponse provides the data retrieved from the latest cloud event.
message GetLatestCloudEventResponse {
  // The data retrieved from the latest cloud event.
  cloudevent.CloudEvent cloud_event = 1;
}

// ListCloudEventsRequest includes search options to filter the events.
message ListCloudEventsRequest {
  // Search options to filter the events.
  SearchOptions options = 1;
  // The maximum number of objects to return.
  int32 limit = 2;
  // Advanced search options to filter the events.
  AdvancedSearchOptions advanced_options = 3;
}

// ListCloudEventsResponse provides the list of data retrieved from the objects.
message ListCloudEventsResponse {
  // The list of data retrieved from the objects.
  repeated cloudevent.CloudEvent cloud_events = 1;
}

// ListCloudEventsFromKeysRequest includes the index key to filter the events.
message ListCloudEventsFromKeysRequest {
  // The list of index objects whose underlying cloud events are to be retrieved.
  repeated CloudEventIndex indexes = 1;
}

// ListCloudEventsFromNameResponse provides the list of data retrieved from the objects.
message ListCloudEventsFromKeysResponse {
  // The list of data retrieved from the objects.
  repeated cloudevent.CloudEvent cloud_events = 1;
}