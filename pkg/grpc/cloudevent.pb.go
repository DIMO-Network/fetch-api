// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.28.3
// source: pkg/grpc/cloudevent.proto

package grpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// CloudEvent represents a CloudEvent with a header and data.
type CloudEvent struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Header        *CloudEventHeader      `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloudEvent) Reset() {
	*x = CloudEvent{}
	mi := &file_pkg_grpc_cloudevent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudEvent) ProtoMessage() {}

func (x *CloudEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_cloudevent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudEvent.ProtoReflect.Descriptor instead.
func (*CloudEvent) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_cloudevent_proto_rawDescGZIP(), []int{0}
}

func (x *CloudEvent) GetHeader() *CloudEventHeader {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *CloudEvent) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

// CloudEventHeader represents the header structure of a CloudEvent.
type CloudEventHeader struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// ID is an identifier for the event. The combination of ID and Source must
	// be unique.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// Source is the context in which the event happened. In a distributed system it might consist of multiple Producers.
	// Typically the 0x address.
	Source string `protobuf:"bytes,2,opt,name=source,proto3" json:"source,omitempty"`
	// Producer is a specific instance, process or device that creates the data structure describing the CloudEvent.
	// Typically a DID of a nft.
	Producer string `protobuf:"bytes,3,opt,name=producer,proto3" json:"producer,omitempty"`
	// SpecVersion is the version of CloudEvents specification used.
	// This is always hardcoded "1.0".
	SpecVersion string `protobuf:"bytes,4,opt,name=spec_version,json=specVersion,proto3" json:"spec_version,omitempty"`
	// Subject is an optional field identifying the subject of the event within
	// the context of the event producer.
	// Typically the DID of the nft.
	Subject string `protobuf:"bytes,5,opt,name=subject,proto3" json:"subject,omitempty"`
	// Time which the event occurred.
	Time *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=time,proto3" json:"time,omitempty"`
	// Type describes the type of event.
	// Typically a one of the predefined DIMO types. (dimo.status, dimo.fingerprint, dimo.verfiabaleCredential...)
	Type string `protobuf:"bytes,7,opt,name=type,proto3" json:"type,omitempty"`
	// DataContentType is an optional MIME type for the data field. We almost
	// always serialize to JSON and in that case this field is implicitly
	// "application/json".
	DataContentType string `protobuf:"bytes,8,opt,name=data_content_type,json=dataContentType,proto3" json:"data_content_type,omitempty"`
	// DataSchema is an optional URI pointing to a schema for the data field.
	DataSchema string `protobuf:"bytes,9,opt,name=data_schema,json=dataSchema,proto3" json:"data_schema,omitempty"`
	// DataVersion is the controlled by the source of the event and is used to provide information about the data.
	DataVersion string `protobuf:"bytes,10,opt,name=data_version,json=dataVersion,proto3" json:"data_version,omitempty"`
	// Extras contains any additional fields that are not part of the CloudEvent excluding the data field.
	Extras        map[string][]byte `protobuf:"bytes,11,rep,name=extras,proto3" json:"extras,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloudEventHeader) Reset() {
	*x = CloudEventHeader{}
	mi := &file_pkg_grpc_cloudevent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloudEventHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudEventHeader) ProtoMessage() {}

func (x *CloudEventHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_grpc_cloudevent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudEventHeader.ProtoReflect.Descriptor instead.
func (*CloudEventHeader) Descriptor() ([]byte, []int) {
	return file_pkg_grpc_cloudevent_proto_rawDescGZIP(), []int{1}
}

func (x *CloudEventHeader) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloudEventHeader) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *CloudEventHeader) GetProducer() string {
	if x != nil {
		return x.Producer
	}
	return ""
}

func (x *CloudEventHeader) GetSpecVersion() string {
	if x != nil {
		return x.SpecVersion
	}
	return ""
}

func (x *CloudEventHeader) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *CloudEventHeader) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *CloudEventHeader) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *CloudEventHeader) GetDataContentType() string {
	if x != nil {
		return x.DataContentType
	}
	return ""
}

func (x *CloudEventHeader) GetDataSchema() string {
	if x != nil {
		return x.DataSchema
	}
	return ""
}

func (x *CloudEventHeader) GetDataVersion() string {
	if x != nil {
		return x.DataVersion
	}
	return ""
}

func (x *CloudEventHeader) GetExtras() map[string][]byte {
	if x != nil {
		return x.Extras
	}
	return nil
}

var File_pkg_grpc_cloudevent_proto protoreflect.FileDescriptor

const file_pkg_grpc_cloudevent_proto_rawDesc = "" +
	"\n" +
	"\x19pkg/grpc/cloudevent.proto\x12\n" +
	"cloudevent\x1a\x1fgoogle/protobuf/timestamp.proto\"V\n" +
	"\n" +
	"CloudEvent\x124\n" +
	"\x06header\x18\x01 \x01(\v2\x1c.cloudevent.CloudEventHeaderR\x06header\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"\xc4\x03\n" +
	"\x10CloudEventHeader\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x16\n" +
	"\x06source\x18\x02 \x01(\tR\x06source\x12\x1a\n" +
	"\bproducer\x18\x03 \x01(\tR\bproducer\x12!\n" +
	"\fspec_version\x18\x04 \x01(\tR\vspecVersion\x12\x18\n" +
	"\asubject\x18\x05 \x01(\tR\asubject\x12.\n" +
	"\x04time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\x04time\x12\x12\n" +
	"\x04type\x18\a \x01(\tR\x04type\x12*\n" +
	"\x11data_content_type\x18\b \x01(\tR\x0fdataContentType\x12\x1f\n" +
	"\vdata_schema\x18\t \x01(\tR\n" +
	"dataSchema\x12!\n" +
	"\fdata_version\x18\n" +
	" \x01(\tR\vdataVersion\x12@\n" +
	"\x06extras\x18\v \x03(\v2(.cloudevent.CloudEventHeader.ExtrasEntryR\x06extras\x1a9\n" +
	"\vExtrasEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01B,Z*github.com/DIMO-Network/fetch-api/pkg/grpcb\x06proto3"

var (
	file_pkg_grpc_cloudevent_proto_rawDescOnce sync.Once
	file_pkg_grpc_cloudevent_proto_rawDescData []byte
)

func file_pkg_grpc_cloudevent_proto_rawDescGZIP() []byte {
	file_pkg_grpc_cloudevent_proto_rawDescOnce.Do(func() {
		file_pkg_grpc_cloudevent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_grpc_cloudevent_proto_rawDesc), len(file_pkg_grpc_cloudevent_proto_rawDesc)))
	})
	return file_pkg_grpc_cloudevent_proto_rawDescData
}

var file_pkg_grpc_cloudevent_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_pkg_grpc_cloudevent_proto_goTypes = []any{
	(*CloudEvent)(nil),            // 0: cloudevent.CloudEvent
	(*CloudEventHeader)(nil),      // 1: cloudevent.CloudEventHeader
	nil,                           // 2: cloudevent.CloudEventHeader.ExtrasEntry
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
}
var file_pkg_grpc_cloudevent_proto_depIdxs = []int32{
	1, // 0: cloudevent.CloudEvent.header:type_name -> cloudevent.CloudEventHeader
	3, // 1: cloudevent.CloudEventHeader.time:type_name -> google.protobuf.Timestamp
	2, // 2: cloudevent.CloudEventHeader.extras:type_name -> cloudevent.CloudEventHeader.ExtrasEntry
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_grpc_cloudevent_proto_init() }
func file_pkg_grpc_cloudevent_proto_init() {
	if File_pkg_grpc_cloudevent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_grpc_cloudevent_proto_rawDesc), len(file_pkg_grpc_cloudevent_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_grpc_cloudevent_proto_goTypes,
		DependencyIndexes: file_pkg_grpc_cloudevent_proto_depIdxs,
		MessageInfos:      file_pkg_grpc_cloudevent_proto_msgTypes,
	}.Build()
	File_pkg_grpc_cloudevent_proto = out.File
	file_pkg_grpc_cloudevent_proto_goTypes = nil
	file_pkg_grpc_cloudevent_proto_depIdxs = nil
}
